name: Deploy Documentation

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.12.2"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate documentation
        run: npm run docs

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Create temporary repository with documentation
        run: |
          # Create a new temporary repository
          mkdir -p temp-repo/docs
          cd temp-repo
          git init

          # Copy documentation
          cp -r ../docs/* docs/
          touch docs/.nojekyll

          # Commit changes
          git add .
          git commit -m "docs: update documentation"

          # Push to GitHub (this creates a fork automatically)
          # Using GITHUB_TOKEN for this push to your own repository
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository_owner }}/ast-types-docs-temp.git
          git branch -M main
          git push -f origin main

      - name: Create Pull Request to target repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.EXTERNAL_REPO_TOKEN }}
          script: |
            const owner = 'amplication';
            const repo = 'ast-types';

            try {
              const response = await github.rest.pulls.create({
                owner,
                repo,
                title: 'Update documentation',
                body: 'This PR updates the documentation based on the latest changes in the main repository.\n\nAutomated PR created by GitHub Actions.',
                head: `${{ github.repository_owner }}:main`,
                base: 'main'
              });
              
              console.log(`Pull request created: ${response.data.html_url}`);
            } catch (error) {
              console.error('Error creating pull request:', error);
              
              // If PR already exists, we'll just log and continue
              if (error.message.includes('A pull request already exists')) {
                console.log('A pull request already exists for this branch.');
              } else {
                throw error;
              }
            }
